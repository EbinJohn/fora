AppError = require('../common/apperror').AppError
BaseModel = require('./basemodel').BaseModel

class Forum extends BaseModel
        
    @_getMeta: ->
        userModule = require('./user')
        {
            type: Forum,
            collection: 'forums',
            fields: {
                network: 'string',
                name: 'string',
                stub: 'string',
                settings: 'object',
                icon: 'string',
                iconThumbnail: 'string',
                cover: { type: 'string', required: 'false' },
                createdBy: { type: userModule.User.Summary, validate: -> @createdBy.validate() },
                moderators: { 
                    type: userModule.User.Summary, 
                    validate: -> 
                        if @moderators.length
                            m.validate() for m in @moderators
                        else
                            'There should be at least one moderator.'
                },
                totalItems: 'number',
                totalSubscribers: 'number',              
                createdAt: { autoGenerated: true, event: 'created' },
                updatedAt: { autoGenerated: true, event: 'updated' }
            },
            logging: {
                isLogged: true,
                onInsert: 'NEW_FORUM'
            }
        }
        

    constructor: (params) ->
        @totalItems ?= 0
        @totalSubscribers ?= 0
        @settings = {}
        @moderators = []
        super
        

    
    save: (context, cb) =>
        super

 
        
    summarize: =>        
        summary = new Summary {
            id: @_id.toString()
            network: @network,
            name: @name,
            stub: @stub,
            type: @type,
            createdBy: @createdBy
        }
        
        
    
    class Summary extends BaseModel    
        @_getMeta: ->
            userModule = require('./user')
            {
                type: Summary,
                fields: {
                    id: 'string',
                    network: 'string',
                    name: 'string',
                    stub: 'string',
                    type: 'string',
                    createdBy: userModule.User.Summary
                }
            }    
                
    Forum.Summary = Summary
    
    
exports.Forum = Forum
