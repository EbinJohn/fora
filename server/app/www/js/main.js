// Generated by CoffeeScript 1.6.2
(function() {
  var App,
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  window.Lappd = {
    Views: {
      Home: {},
      Collections: {},
      Users: {},
      Posts: {}
    }
  };

  App = (function() {
    function App() {
      this.loadScript = __bind(this.loadScript, this);
      this.clearCookies = __bind(this.clearCookies, this);
      this.logout = __bind(this.logout, this);
      this.login = __bind(this.login, this);
      this.isLoggedInUser = __bind(this.isLoggedInUser, this);
      this.getUserUrl = __bind(this.getUserUrl, this);
      this.getUser = __bind(this.getUser, this);
      this.init = __bind(this.init, this);      $(document).ready(this.init);
    }

    App.prototype.init = function() {
      var _this = this;

      return $(document).clickHandler('.account-options .logout', function() {
        return _this.logout();
      });
    };

    App.prototype.getUser = function() {
      return {
        id: $.cookie('userid'),
        domain: $.cookie('domain'),
        username: $.cookie('username'),
        name: $.cookie('fullName'),
        passkey: $.cookie('passkey')
      };
    };

    App.prototype.getUserUrl = function() {
      var user;

      user = this.getUser();
      if (user.domain === 'tw') {
        return "@" + user.username;
      } else {
        return "" + user.domain + "/" + user.username;
      }
    };

    App.prototype.isLoggedInUser = function(user) {
      return (user.domain === this.getUser().domain) && (user.username === this.getUser().username);
    };

    App.prototype.login = function(resp) {
      var options;

      options = {};
      $.cookie('userid', resp.userid, options);
      $.cookie('domain', resp.domain, options);
      $.cookie('username', resp.username, options);
      $.cookie('fullName', resp.name, options);
      return $.cookie('passkey', resp.passkey, options);
    };

    App.prototype.logout = function() {
      this.clearCookies();
      return $('.account-options .signin').html('<i class="icon-twitter"></i><a href="/auth/twitter">Sign in</a>');
    };

    App.prototype.clearCookies = function() {
      $.removeCookie('userid');
      $.removeCookie('domain');
      $.removeCookie('username');
      $.removeCookie('fullName');
      return $.removeCookie('passkey');
    };

    App.prototype.loadScript = function(src) {
      return $('head').append("<script src=\"" + src + "\"></script>");
    };

    return App;

  })();

  window.app = new App;

  window.Lappd.uniqueId = function(length) {
    var id;

    if (length == null) {
      length = 16;
    }
    id = "";
    while (id.length < length) {
      id += Math.random().toString(36).substr(2);
    }
    return id.substr(0, length);
  };

  window.Lappd.apiUrl = function(url, params, options) {
    var key, paramArray, passkey, query, val;

    if (params == null) {
      params = {};
    }
    if (options == null) {
      options = {
        api: 'v1'
      };
    }
    if (/^\//.test(url)) {
      url = url.substring(1);
    }
    passkey = app.getUser().passkey;
    if (passkey) {
      params.passkey = passkey;
    }
    if (Object.keys(params).length > 0) {
      paramArray = [];
      for (key in params) {
        val = params[key];
        paramArray.push("" + key + "=" + (encodeURIComponent(val)));
      }
      query = paramArray.join('&');
      if (/\?/.test(url)) {
        url += "&" + query;
      } else {
        url += "?" + query;
      }
    }
    return "/api/" + options.api + "/" + url;
  };

  $.fn.bindNew = function(eventName, p1, p2) {
    var fn, selector;

    if (p2 == null) {
      fn = p1;
      $(this).off(eventName);
      return $(this).on(eventName, fn);
    } else {
      selector = p1;
      fn = p2;
      $(this).off(eventName, selector);
      return $(this).on(eventName, selector, fn);
    }
  };

  $.fn.clickHandler = function(selector, fn) {
    var _fn;

    _fn = function() {
      fn.apply(this, arguments);
      return false;
    };
    $(this).off('click', selector);
    return $(this).on('click', selector, _fn);
  };

  $.fn._hide = function() {
    $(this).removeClass('visible');
    return $(this).addClass('hidden');
  };

  $.fn._show = function() {
    $(this).removeClass('hidden');
    return $(this).addClass('visible');
  };

}).call(this);
