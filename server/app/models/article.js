// Generated by CoffeeScript 1.6.2
(function() {
  var AppError, Article, Post, async, mdparser, utils,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  async = require('../common/async');

  utils = require('../common/utils');

  AppError = require('../common/apperror').AppError;

  mdparser = require('../common/markdownutil').marked;

  Post = require('./post').Post;

  Article = (function(_super) {
    __extends(Article, _super);

    Article._getMeta = function() {
      var meta;

      meta = {
        fields: {
          stub: {
            type: 'string',
            required: false
          },
          state: {
            type: 'string',
            validate: function() {
              return ['draft', 'published'].indexOf(this.state);
            }
          },
          title: 'string',
          summary: {
            type: 'string',
            required: 'false'
          },
          publishedAt: {
            type: 'number',
            validate: function() {
              return this.state === 'published' && !this.publishedAt;
            }
          }
        }
      };
      return utils.extend(meta, utils.clone(Post._getMeta()));
    };

    function Article() {
      this.type = 'article';
      Article.__super__.constructor.apply(this, arguments);
    }

    return Article;

  })(Post);

  exports.Article = Article;

}).call(this);
