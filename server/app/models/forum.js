// Generated by CoffeeScript 1.6.2
(function() {
  var AppError, BaseModel, Forum, Summary, _ref,
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  AppError = require('../common/apperror').AppError;

  BaseModel = require('./basemodel').BaseModel;

  Forum = (function(_super) {
    __extends(Forum, _super);

    Forum.describeModel = function() {
      return {
        type: Forum,
        collection: 'forums',
        fields: {
          network: 'string',
          name: 'string',
          stub: 'string',
          settings: 'object',
          icon: 'string',
          iconThumbnail: 'string',
          cover: {
            type: 'string',
            required: false
          },
          createdBy: {
            type: this.getModels().User.Summary,
            validate: function() {
              return this.createdBy.validate();
            }
          },
          moderators: {
            type: 'array',
            contents: {
              type: this.getModels().User.Summary,
              validate: function() {
                var m, _i, _len, _ref, _results;

                if (this.moderators.length) {
                  _ref = this.moderators;
                  _results = [];
                  for (_i = 0, _len = _ref.length; _i < _len; _i++) {
                    m = _ref[_i];
                    _results.push(m.validate());
                  }
                  return _results;
                }
              }
            }
          },
          totalItems: 'number',
          totalSubscribers: 'number',
          createdAt: {
            autoGenerated: true,
            event: 'created'
          },
          updatedAt: {
            autoGenerated: true,
            event: 'updated'
          }
        },
        logging: {
          isLogged: true,
          onInsert: 'NEW_FORUM'
        }
      };
    };

    function Forum(params) {
      this.summarize = __bind(this.summarize, this);
      var _ref, _ref1;

      if ((_ref = this.totalItems) == null) {
        this.totalItems = 0;
      }
      if ((_ref1 = this.totalSubscribers) == null) {
        this.totalSubscribers = 0;
      }
      this.settings = {};
      this.moderators = [];
      Forum.__super__.constructor.apply(this, arguments);
    }

    Forum.prototype.summarize = function() {
      var summary;

      return summary = new Summary({
        id: this._id.toString(),
        network: this.network,
        name: this.name,
        stub: this.stub,
        type: this.type,
        createdBy: this.createdBy
      });
    };

    return Forum;

  })(BaseModel);

  Summary = (function(_super) {
    __extends(Summary, _super);

    function Summary() {
      _ref = Summary.__super__.constructor.apply(this, arguments);
      return _ref;
    }

    Summary.describeModel = function() {
      return {
        type: Summary,
        fields: {
          id: 'string',
          network: 'string',
          name: 'string',
          stub: 'string',
          type: 'string',
          createdBy: this.getModels().User.Summary
        }
      };
    };

    return Summary;

  })(BaseModel);

  Forum.Summary = Summary;

  exports.Forum = Forum;

}).call(this);
