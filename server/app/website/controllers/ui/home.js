// Generated by CoffeeScript 1.6.2
(function() {
  var AppError, Home, conf, controller, db, models, utils,
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  controller = require('../controller');

  conf = require('../../../conf');

  db = new (require('../../../common/database')).Database(conf.db);

  models = require('../../../models');

  utils = require('../../../common/utils');

  AppError = require('../../../common/apperror').AppError;

  Home = (function(_super) {
    __extends(Home, _super);

    function Home() {
      this.index = __bind(this.index, this);
    }

    Home.prototype.index = function(req, res, next) {
      var _this = this;

      return this.attachUser(arguments, function() {
        return models.Post.find({
          meta: 'featured'
        }, (function(cursor) {
          return cursor.sort({
            _id: -1
          }).limit(12);
        }), {}, db, function(err, posts) {
          var post, _i, _len;

          for (_i = 0, _len = posts.length; _i < _len; _i++) {
            post = posts[_i];
            post.summary = post.summarize("concise");
          }
          return res.render('home/index.hbs', {
            posts: posts
          });
        });
      });
    };

    return Home;

  })(controller.Controller);

  exports.Home = Home;

}).call(this);
